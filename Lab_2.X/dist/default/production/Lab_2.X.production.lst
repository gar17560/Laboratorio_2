

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Feb 02 22:27:18 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataCOMMON
   290  0229                     __pidataCOMMON:	
   291                           
   292                           ;initializer for _transis
   293  0229  3401               	retlw	1
   294  0001                     _TMR0	set	1
   295  0005                     _PORTA	set	5
   296  0006                     _PORTB	set	6
   297  0009                     _PORTE	set	9
   298  0007                     _PORTC	set	7
   299  000B                     _INTCONbits	set	11
   300  001E                     _ADRESH	set	30
   301  000C                     _PIR1bits	set	12
   302  0009                     _PORTEbits	set	9
   303  001F                     _ADCON0bits	set	31
   304  0006                     _PORTBbits	set	6
   305  0008                     _PORTD	set	8
   306  008C                     _PIE1bits	set	140
   307  009F                     _ADCON1bits	set	159
   308  0088                     _TRISD	set	136
   309  0085                     _TRISA	set	133
   310  0096                     _IOCB	set	150
   311  0081                     _OPTION_REGbits	set	129
   312  0095                     _WPUB	set	149
   313  0086                     _TRISB	set	134
   314  0089                     _TRISE	set	137
   315  0087                     _TRISC	set	135
   316  0189                     _ANSELH	set	393
   317  0188                     _ANSEL	set	392
   318                           
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  0011                     start_initialization:	
   323  0011                     __initialization:	
   324                           
   325                           ; Initialize objects allocated to COMMON
   326  0011  120A  118A  2229   	fcall	__pidataCOMMON	;fetch initializer
   327  0014  00FD               	movwf	__pdataCOMMON& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK0
   330  0015  01A3               	clrf	__pbssBANK0& (0+127)
   331  0016  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   332                           
   333                           ; Clear objects allocated to COMMON
   334  0017  01FB               	clrf	__pbssCOMMON& (0+127)
   335  0018  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   336  0019                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339  0019                     __end_of__initialization:	
   340  0019  0183               	clrf	3
   341  001A  120A  118A  29F0   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	bssCOMMON
   344  007B                     __pbssCOMMON:	
   345  007B                     _valor_adc:	
   346  007B                     	ds	1
   347  007C                     _contador:	
   348  007C                     	ds	1
   349                           
   350                           	psect	dataCOMMON
   351  007D                     __pdataCOMMON:	
   352  007D                     _transis:	
   353  007D                     	ds	1
   354                           
   355                           	psect	bssBANK0
   356  0023                     __pbssBANK0:	
   357  0023                     _b:	
   358  0023                     	ds	1
   359  0024                     _a:	
   360  0024                     	ds	1
   361                           
   362                           	psect	cstackCOMMON
   363  0070                     __pcstackCOMMON:	
   364  0070                     ?_config:	
   365  0070                     ?_init_ADC:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_init_TMR0:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_hexa_display:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_isr:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     hexa_display@transis:	
   381                           ; 1 bytes @ 0x0
   382                           
   383                           
   384                           ; 1 bytes @ 0x0
   385  0070                     	ds	1
   386  0071                     ??_hexa_display:	
   387                           
   388                           ; 1 bytes @ 0x1
   389  0071                     	ds	2
   390  0073                     hexa_display@valor1:	
   391                           
   392                           ; 1 bytes @ 0x3
   393  0073                     	ds	1
   394  0074                     hexa_display@valor2:	
   395                           
   396                           ; 1 bytes @ 0x4
   397  0074                     	ds	1
   398  0075                     hexa_display@adc_valor:	
   399                           
   400                           ; 1 bytes @ 0x5
   401  0075                     	ds	1
   402  0076                     ??_isr:	
   403                           
   404                           ; 1 bytes @ 0x6
   405  0076                     	ds	5
   406                           
   407                           	psect	cstackBANK0
   408  0020                     __pcstackBANK0:	
   409  0020                     ??_config:	
   410  0020                     ??_init_ADC:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0020                     ??_init_TMR0:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0020                     init_TMR0@valor_tmr:	
   417                           ; 1 bytes @ 0x0
   418                           
   419                           
   420                           ; 1 bytes @ 0x0
   421  0020                     	ds	2
   422  0022                     init_ADC@channel:	
   423                           
   424                           ; 1 bytes @ 0x2
   425  0022                     	ds	1
   426  0023                     ??_main:	
   427                           
   428                           	psect	maintext
   429  01F0                     __pmaintext:	
   430                           ; 1 bytes @ 0x3
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 52 in file "LAB_2.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : B00/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels required when called:    3
   456 ;; This function calls:
   457 ;;		_config
   458 ;;		_init_ADC
   459 ;;		_init_TMR0
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           
   466                           ;psect for function _main
   467  01F0                     _main:	
   468                           
   469                           ;LAB_2.c: 53:     config();
   470                           
   471                           ;incstack = 0
   472                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   473  01F0  120A  118A  21BF  120A  118A  	fcall	_config
   474                           
   475                           ;LAB_2.c: 54:     init_ADC(0x00);
   476  01F5  3000               	movlw	0
   477  01F6  120A  118A  20EF  120A  118A  	fcall	_init_ADC
   478                           
   479                           ;LAB_2.c: 55:     init_TMR0(0xFF);
   480  01FB  30FF               	movlw	255
   481  01FC  120A  118A  2219  120A  118A  	fcall	_init_TMR0
   482                           
   483                           ;LAB_2.c: 57:     contador = 0x00;
   484  0201  01FC               	clrf	_contador
   485                           
   486                           ;LAB_2.c: 58:     PORTD = contador;
   487  0202  087C               	movf	_contador,w
   488  0203  1283               	bcf	3,5	;RP0=0, select bank0
   489  0204  1303               	bcf	3,6	;RP1=0, select bank0
   490  0205  0088               	movwf	8	;volatile
   491  0206                     l1228:	
   492                           
   493                           ;LAB_2.c: 60:         PORTD = contador;
   494  0206  087C               	movf	_contador,w
   495  0207  0088               	movwf	8	;volatile
   496                           
   497                           ;LAB_2.c: 61:         if(PORTBbits.RB0 == 1){
   498  0208  1806               	btfsc	6,0	;volatile
   499                           
   500                           ;LAB_2.c: 62:             a=0;
   501  0209  01A4               	clrf	_a
   502                           
   503                           ;LAB_2.c: 64:         if(PORTBbits.RB1 == 1){
   504  020A  1886               	btfsc	6,1	;volatile
   505                           
   506                           ;LAB_2.c: 65:             b=0;
   507  020B  01A3               	clrf	_b
   508                           
   509                           ;LAB_2.c: 68:         ADCON0bits.GO = 1;
   510  020C  149F               	bsf	31,1	;volatile
   511  020D                     l68:	
   512                           ;LAB_2.c: 71:         }
   513                           
   514                           
   515                           ;LAB_2.c: 69:         while(ADCON0bits.GO == 1){
   516  020D  189F               	btfsc	31,1	;volatile
   517  020E  2A0D               	goto	l68
   518                           
   519                           ;LAB_2.c: 72:     if (valor_adc > contador){
   520  020F  087B               	movf	_valor_adc,w
   521  0210  027C               	subwf	_contador,w
   522  0211  1C03               	btfss	3,0
   523                           
   524                           ;LAB_2.c: 73:         PORTEbits.RE2 = 1;
   525  0212  1509               	bsf	9,2	;volatile
   526                           
   527                           ;LAB_2.c: 76:     if (valor_adc < contador){
   528  0213  087C               	movf	_contador,w
   529  0214  027B               	subwf	_valor_adc,w
   530  0215  1803               	skipnc
   531  0216  2A06               	goto	l1228
   532                           
   533                           ;LAB_2.c: 77:         PORTEbits.RE2 = 0;
   534  0217  1109               	bcf	9,2	;volatile
   535  0218  2A06               	goto	l1228
   536  0219                     __end_of_main:	
   537                           
   538                           	psect	text1
   539  0219                     __ptext1:	
   540 ;; *************** function _init_TMR0 *****************
   541 ;; Defined at:
   542 ;;		line 132 in file "funciones.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  valor_tmr       1    wreg     unsigned char 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  valor_tmr       1    0[BANK0 ] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       1       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       1       0       0       0
   560 ;;Total ram usage:        1 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		Nothing
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _init_TMR0
   572  0219                     _init_TMR0:	
   573                           
   574                           ;incstack = 0
   575                           ; Regs used in _init_TMR0: [wreg]
   576                           ;init_TMR0@valor_tmr stored from wreg
   577  0219  1283               	bcf	3,5	;RP0=0, select bank0
   578  021A  1303               	bcf	3,6	;RP1=0, select bank0
   579  021B  00A0               	movwf	init_TMR0@valor_tmr
   580                           
   581                           ;funciones.c: 134:     OPTION_REGbits.T0CS = 0;
   582  021C  1683               	bsf	3,5	;RP0=1, select bank1
   583  021D  1303               	bcf	3,6	;RP1=0, select bank1
   584  021E  1281               	bcf	1,5	;volatile
   585                           
   586                           ;funciones.c: 135:     OPTION_REGbits.PSA = 0;
   587  021F  1181               	bcf	1,3	;volatile
   588                           
   589                           ;funciones.c: 137:     OPTION_REGbits.PS2 = 1;
   590  0220  1501               	bsf	1,2	;volatile
   591                           
   592                           ;funciones.c: 138:     OPTION_REGbits.PS1 = 0;
   593  0221  1081               	bcf	1,1	;volatile
   594                           
   595                           ;funciones.c: 139:     OPTION_REGbits.PS0 = 0;
   596  0222  1001               	bcf	1,0	;volatile
   597                           
   598                           ;funciones.c: 141:     INTCONbits.T0IF = 0;
   599  0223  110B               	bcf	11,2	;volatile
   600                           
   601                           ;funciones.c: 143:     TMR0 = valor_tmr;
   602  0224  1283               	bcf	3,5	;RP0=0, select bank0
   603  0225  1303               	bcf	3,6	;RP1=0, select bank0
   604  0226  0820               	movf	init_TMR0@valor_tmr,w
   605  0227  0081               	movwf	1	;volatile
   606  0228  0008               	return
   607  0229                     __end_of_init_TMR0:	
   608                           
   609                           	psect	text2
   610  00EF                     __ptext2:	
   611 ;; *************** function _init_ADC *****************
   612 ;; Defined at:
   613 ;;		line 14 in file "funciones.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  channel         1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  channel         1    2[BANK0 ] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       1       0       0       0
   629 ;;      Temps:          0       2       0       0       0
   630 ;;      Totals:         0       3       0       0       0
   631 ;;Total ram usage:        3 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _init_ADC
   643  00EF                     _init_ADC:	
   644                           
   645                           ;incstack = 0
   646                           ; Regs used in _init_ADC: [wreg-fsr0h+status,2+status,0]
   647                           ;init_ADC@channel stored from wreg
   648  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   649  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   650  00F1  00A2               	movwf	init_ADC@channel
   651                           
   652                           ;funciones.c: 15:     ADCON0bits.ADCS1 = 0;
   653  00F2  139F               	bcf	31,7	;volatile
   654                           
   655                           ;funciones.c: 16:     ADCON0bits.ADCS0 = 1;
   656  00F3  171F               	bsf	31,6	;volatile
   657                           
   658                           ;funciones.c: 19:     switch(channel){
   659  00F4  2924               	goto	l1116
   660  00F5                     l116:	
   661                           ;funciones.c: 20:         case 0:
   662                           
   663  00F5  291F               	goto	l133
   664  00F6                     l118:	
   665                           ;funciones.c: 26:         case 1:
   666                           
   667                           ;funciones.c: 25:             break;
   668                           
   669                           ;funciones.c: 24:             ADCON0bits.CHS0 = 0;
   670                           
   671                           ;funciones.c: 23:             ADCON0bits.CHS1 = 0;
   672                           
   673                           ;funciones.c: 22:             ADCON0bits.CHS2 = 0;
   674                           
   675                           ;funciones.c: 21:             ADCON0bits.CHS3 = 0;
   676                           
   677                           
   678                           ;funciones.c: 27:             ADCON0bits.CHS3 = 0;
   679  00F6  129F               	bcf	31,5	;volatile
   680  00F7  2907               	goto	L30
   681  00F8                     l119:	
   682                           ;funciones.c: 32:         case 2:
   683                           
   684                           ;funciones.c: 31:             break;
   685                           
   686                           ;funciones.c: 30:             ADCON0bits.CHS0 = 1;
   687                           
   688                           ;funciones.c: 29:             ADCON0bits.CHS1 = 0;
   689                           
   690                           ;funciones.c: 28:             ADCON0bits.CHS2 = 0;
   691                           
   692                           
   693                           ;funciones.c: 33:             ADCON0bits.CHS3 = 0;
   694  00F8  129F               	bcf	31,5	;volatile
   695  00F9  290A               	goto	L31
   696  00FA                     l120:	
   697                           ;funciones.c: 38:         case 3:
   698                           
   699                           ;funciones.c: 37:             break;
   700                           
   701                           ;funciones.c: 36:             ADCON0bits.CHS0 = 0;
   702                           
   703                           ;funciones.c: 35:             ADCON0bits.CHS1 = 1;
   704                           
   705                           ;funciones.c: 34:             ADCON0bits.CHS2 = 0;
   706                           
   707                           
   708                           ;funciones.c: 39:             ADCON0bits.CHS3 = 0;
   709  00FA  129F               	bcf	31,5	;volatile
   710  00FB  290D               	goto	L26
   711  00FC                     l121:	
   712                           ;funciones.c: 44:         case 4:
   713                           
   714                           ;funciones.c: 43:             break;
   715                           
   716                           ;funciones.c: 42:             ADCON0bits.CHS0 = 1;
   717                           
   718                           ;funciones.c: 41:             ADCON0bits.CHS1 = 1;
   719                           
   720                           ;funciones.c: 40:             ADCON0bits.CHS2 = 0;
   721                           
   722                           
   723                           ;funciones.c: 45:             ADCON0bits.CHS3 = 0;
   724  00FC  129F               	bcf	31,5	;volatile
   725  00FD  2910               	goto	L27
   726  00FE                     l122:	
   727                           ;funciones.c: 50:         case 5:
   728                           
   729                           ;funciones.c: 49:             break;
   730                           
   731                           ;funciones.c: 48:             ADCON0bits.CHS0 = 0;
   732                           
   733                           ;funciones.c: 47:             ADCON0bits.CHS1 = 0;
   734                           
   735                           ;funciones.c: 46:             ADCON0bits.CHS2 = 1;
   736                           
   737                           
   738                           ;funciones.c: 51:             ADCON0bits.CHS3 = 0;
   739  00FE  129F               	bcf	31,5	;volatile
   740  00FF  2913               	goto	L28
   741  0100                     l123:	
   742                           ;funciones.c: 56:         case 6:
   743                           
   744                           ;funciones.c: 55:             break;
   745                           
   746                           ;funciones.c: 54:             ADCON0bits.CHS0 = 1;
   747                           
   748                           ;funciones.c: 53:             ADCON0bits.CHS1 = 0;
   749                           
   750                           ;funciones.c: 52:             ADCON0bits.CHS2 = 1;
   751                           
   752                           
   753                           ;funciones.c: 57:             ADCON0bits.CHS3 = 0;
   754  0100  129F               	bcf	31,5	;volatile
   755  0101  2917               	goto	L29
   756  0102                     l124:	
   757                           ;funciones.c: 62:         case 7:
   758                           
   759                           ;funciones.c: 61:             break;
   760                           
   761                           ;funciones.c: 60:             ADCON0bits.CHS0 = 0;
   762                           
   763                           ;funciones.c: 59:             ADCON0bits.CHS1 = 1;
   764                           
   765                           ;funciones.c: 58:             ADCON0bits.CHS2 = 1;
   766                           
   767                           
   768                           ;funciones.c: 63:             ADCON0bits.CHS3 = 0;
   769  0102  129F               	bcf	31,5	;volatile
   770  0103  291B               	goto	L16
   771  0104                     l125:	
   772                           ;funciones.c: 68:         case 8:
   773                           
   774                           ;funciones.c: 67:             break;
   775                           
   776                           ;funciones.c: 66:             ADCON0bits.CHS0 = 1;
   777                           
   778                           ;funciones.c: 65:             ADCON0bits.CHS1 = 1;
   779                           
   780                           ;funciones.c: 64:             ADCON0bits.CHS2 = 1;
   781                           
   782                           
   783                           ;funciones.c: 69:             ADCON0bits.CHS3 = 1;
   784  0104  169F               	bsf	31,5	;volatile
   785  0105  2920               	goto	L17
   786  0106                     l126:	
   787                           ;funciones.c: 74:         case 9:
   788                           
   789                           ;funciones.c: 73:             break;
   790                           
   791                           ;funciones.c: 72:             ADCON0bits.CHS0 = 0;
   792                           
   793                           ;funciones.c: 71:             ADCON0bits.CHS1 = 0;
   794                           
   795                           ;funciones.c: 70:             ADCON0bits.CHS2 = 0;
   796                           
   797                           
   798                           ;funciones.c: 75:             ADCON0bits.CHS3 = 1;
   799  0106  169F               	bsf	31,5	;volatile
   800  0107                     L30:	
   801                           
   802                           ;funciones.c: 76:             ADCON0bits.CHS2 = 0;
   803  0107  121F               	bcf	31,4	;volatile
   804  0108  2914               	goto	L24
   805  0109                     l127:	
   806                           ;funciones.c: 80:         case 10:
   807                           
   808                           ;funciones.c: 79:             break;
   809                           
   810                           ;funciones.c: 78:             ADCON0bits.CHS0 = 1;
   811                           
   812                           ;funciones.c: 77:             ADCON0bits.CHS1 = 0;
   813                           
   814                           
   815                           ;funciones.c: 81:             ADCON0bits.CHS3 = 1;
   816  0109  169F               	bsf	31,5	;volatile
   817  010A                     L31:	
   818                           
   819                           ;funciones.c: 82:             ADCON0bits.CHS2 = 0;
   820  010A  121F               	bcf	31,4	;volatile
   821  010B  2918               	goto	L25
   822  010C                     l128:	
   823                           ;funciones.c: 86:         case 11:
   824                           
   825                           ;funciones.c: 85:             break;
   826                           
   827                           ;funciones.c: 84:             ADCON0bits.CHS0 = 0;
   828                           
   829                           ;funciones.c: 83:             ADCON0bits.CHS1 = 1;
   830                           
   831                           
   832                           ;funciones.c: 87:             ADCON0bits.CHS3 = 1;
   833  010C  169F               	bsf	31,5	;volatile
   834  010D                     L26:	
   835                           
   836                           ;funciones.c: 88:             ADCON0bits.CHS2 = 0;
   837  010D  121F               	bcf	31,4	;volatile
   838  010E  291C               	goto	L18
   839  010F                     l129:	
   840                           ;funciones.c: 92:         case 12:
   841                           
   842                           ;funciones.c: 91:             break;
   843                           
   844                           ;funciones.c: 90:             ADCON0bits.CHS0 = 1;
   845                           
   846                           ;funciones.c: 89:             ADCON0bits.CHS1 = 1;
   847                           
   848                           
   849                           ;funciones.c: 93:             ADCON0bits.CHS3 = 1;
   850  010F  169F               	bsf	31,5	;volatile
   851  0110                     L27:	
   852                           
   853                           ;funciones.c: 94:             ADCON0bits.CHS2 = 1;
   854  0110  161F               	bsf	31,4	;volatile
   855  0111  2921               	goto	L19
   856  0112                     l130:	
   857                           ;funciones.c: 98:         case 13:
   858                           
   859                           ;funciones.c: 97:             break;
   860                           
   861                           ;funciones.c: 96:             ADCON0bits.CHS0 = 0;
   862                           
   863                           ;funciones.c: 95:             ADCON0bits.CHS1 = 0;
   864                           
   865                           
   866                           ;funciones.c: 99:             ADCON0bits.CHS3 = 1;
   867  0112  169F               	bsf	31,5	;volatile
   868  0113                     L28:	
   869                           
   870                           ;funciones.c: 100:             ADCON0bits.CHS2 = 1;
   871  0113  161F               	bsf	31,4	;volatile
   872  0114                     L24:	
   873                           
   874                           ;funciones.c: 101:             ADCON0bits.CHS1 = 0;
   875  0114  119F               	bcf	31,3	;volatile
   876  0115  291D               	goto	L14
   877  0116                     l131:	
   878                           ;funciones.c: 104:         case 14:
   879                           
   880                           ;funciones.c: 103:             break;
   881                           
   882                           ;funciones.c: 102:             ADCON0bits.CHS0 = 1;
   883                           
   884                           
   885                           ;funciones.c: 105:             ADCON0bits.CHS3 = 1;
   886  0116  169F               	bsf	31,5	;volatile
   887  0117                     L29:	
   888                           
   889                           ;funciones.c: 106:             ADCON0bits.CHS2 = 1;
   890  0117  161F               	bsf	31,4	;volatile
   891  0118                     L25:	
   892                           
   893                           ;funciones.c: 107:             ADCON0bits.CHS1 = 1;
   894  0118  159F               	bsf	31,3	;volatile
   895  0119  2922               	goto	L15
   896  011A                     l132:	
   897                           ;funciones.c: 110:         case 15:
   898                           
   899                           ;funciones.c: 109:             break;
   900                           
   901                           ;funciones.c: 108:             ADCON0bits.CHS0 = 0;
   902                           
   903                           
   904                           ;funciones.c: 111:             ADCON0bits.CHS3 = 1;
   905  011A  169F               	bsf	31,5	;volatile
   906  011B                     L16:	
   907                           
   908                           ;funciones.c: 112:             ADCON0bits.CHS2 = 1;
   909  011B  161F               	bsf	31,4	;volatile
   910  011C                     L18:	
   911                           
   912                           ;funciones.c: 113:             ADCON0bits.CHS1 = 1;
   913  011C  159F               	bsf	31,3	;volatile
   914  011D                     L14:	
   915                           
   916                           ;funciones.c: 114:             ADCON0bits.CHS0 = 1;
   917  011D  151F               	bsf	31,2	;volatile
   918                           
   919                           ;funciones.c: 115:             break;
   920  011E  295E               	goto	l117
   921  011F                     l133:	
   922                           ;funciones.c: 116:         default:
   923                           
   924                           
   925                           ;funciones.c: 117:             ADCON0bits.CHS3 = 0;
   926  011F  129F               	bcf	31,5	;volatile
   927  0120                     L17:	
   928                           
   929                           ;funciones.c: 118:             ADCON0bits.CHS2 = 0;
   930  0120  121F               	bcf	31,4	;volatile
   931  0121                     L19:	
   932                           
   933                           ;funciones.c: 119:             ADCON0bits.CHS1 = 0;
   934  0121  119F               	bcf	31,3	;volatile
   935  0122                     L15:	
   936                           
   937                           ;funciones.c: 120:             ADCON0bits.CHS0 = 0;
   938  0122  111F               	bcf	31,2	;volatile
   939                           
   940                           ;funciones.c: 121:             break;
   941  0123  295E               	goto	l117
   942  0124                     l1116:	
   943  0124  0822               	movf	init_ADC@channel,w
   944  0125  00A0               	movwf	??_init_ADC
   945  0126  01A1               	clrf	??_init_ADC+1
   946                           
   947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 1, Range of values is 0 to 0
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            4     3 (average)
   953                           ; direct_byte           11     8 (fixed)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  0127  0821               	movf	??_init_ADC+1,w
   957  0128  3A00               	xorlw	0	; case 0
   958  0129  1903               	skipnz
   959  012A  292C               	goto	l1392
   960  012B  291F               	goto	l133
   961  012C                     l1392:	
   962                           
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 16, Range of values is 0 to 15
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte           49    25 (average)
   968                           ; direct_byte           56     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  012C  0820               	movf	??_init_ADC,w
   972  012D  3A00               	xorlw	0	; case 0
   973  012E  1903               	skipnz
   974  012F  28F5               	goto	l116
   975  0130  3A01               	xorlw	1	; case 1
   976  0131  1903               	skipnz
   977  0132  28F6               	goto	l118
   978  0133  3A03               	xorlw	3	; case 2
   979  0134  1903               	skipnz
   980  0135  28F8               	goto	l119
   981  0136  3A01               	xorlw	1	; case 3
   982  0137  1903               	skipnz
   983  0138  28FA               	goto	l120
   984  0139  3A07               	xorlw	7	; case 4
   985  013A  1903               	skipnz
   986  013B  28FC               	goto	l121
   987  013C  3A01               	xorlw	1	; case 5
   988  013D  1903               	skipnz
   989  013E  28FE               	goto	l122
   990  013F  3A03               	xorlw	3	; case 6
   991  0140  1903               	skipnz
   992  0141  2900               	goto	l123
   993  0142  3A01               	xorlw	1	; case 7
   994  0143  1903               	skipnz
   995  0144  2902               	goto	l124
   996  0145  3A0F               	xorlw	15	; case 8
   997  0146  1903               	skipnz
   998  0147  2904               	goto	l125
   999  0148  3A01               	xorlw	1	; case 9
  1000  0149  1903               	skipnz
  1001  014A  2906               	goto	l126
  1002  014B  3A03               	xorlw	3	; case 10
  1003  014C  1903               	skipnz
  1004  014D  2909               	goto	l127
  1005  014E  3A01               	xorlw	1	; case 11
  1006  014F  1903               	skipnz
  1007  0150  290C               	goto	l128
  1008  0151  3A07               	xorlw	7	; case 12
  1009  0152  1903               	skipnz
  1010  0153  290F               	goto	l129
  1011  0154  3A01               	xorlw	1	; case 13
  1012  0155  1903               	skipnz
  1013  0156  2912               	goto	l130
  1014  0157  3A03               	xorlw	3	; case 14
  1015  0158  1903               	skipnz
  1016  0159  2916               	goto	l131
  1017  015A  3A01               	xorlw	1	; case 15
  1018  015B  1903               	skipnz
  1019  015C  291A               	goto	l132
  1020  015D  291F               	goto	l133
  1021  015E                     l117:	
  1022                           
  1023                           ;funciones.c: 124:     ADCON1bits.ADFM = 0;
  1024  015E  1683               	bsf	3,5	;RP0=1, select bank1
  1025  015F  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0160  139F               	bcf	31,7	;volatile
  1027                           
  1028                           ;funciones.c: 125:     ADCON1bits.VCFG1 = 0;
  1029  0161  129F               	bcf	31,5	;volatile
  1030                           
  1031                           ;funciones.c: 126:     ADCON1bits.VCFG0 = 0;
  1032  0162  121F               	bcf	31,4	;volatile
  1033                           
  1034                           ;funciones.c: 127:     ADCON0bits.ADON = 1;
  1035  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0165  141F               	bsf	31,0	;volatile
  1038                           
  1039                           ;funciones.c: 128:     PIE1bits.ADIE = 1;
  1040  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1041  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1042  0168  170C               	bsf	12,6	;volatile
  1043                           
  1044                           ;funciones.c: 129:     PIR1bits.ADIF = 0;
  1045  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1046  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1047  016B  130C               	bcf	12,6	;volatile
  1048  016C  0008               	return
  1049  016D                     __end_of_init_ADC:	
  1050                           
  1051                           	psect	text3
  1052  01BF                     __ptext3:	
  1053 ;; *************** function _config *****************
  1054 ;; Defined at:
  1055 ;;		line 128 in file "LAB_2.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; Hardware stack levels required when called:    2
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _config
  1085  01BF                     _config:	
  1086                           
  1087                           ;LAB_2.c: 133:     TRISC = 0x00;
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in _config: [wreg+status,2]
  1091  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1092  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1093  01C1  0187               	clrf	7	;volatile
  1094                           
  1095                           ;LAB_2.c: 134:     PORTC = 0x00;
  1096  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1097  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1098  01C4  0187               	clrf	7	;volatile
  1099                           
  1100                           ;LAB_2.c: 136:     PORTE = 0x0;
  1101  01C5  0189               	clrf	9	;volatile
  1102                           
  1103                           ;LAB_2.c: 137:     ANSEL = 0x01;
  1104  01C6  3001               	movlw	1
  1105  01C7  1683               	bsf	3,5	;RP0=1, select bank3
  1106  01C8  1703               	bsf	3,6	;RP1=1, select bank3
  1107  01C9  0088               	movwf	8	;volatile
  1108                           
  1109                           ;LAB_2.c: 138:     TRISE = 0x0;
  1110  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1111  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1112  01CC  0189               	clrf	9	;volatile
  1113                           
  1114                           ;LAB_2.c: 140:     PORTB = 0x00;
  1115  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1116  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1117  01CF  0186               	clrf	6	;volatile
  1118                           
  1119                           ;LAB_2.c: 141:     TRISB = 0b11111111;
  1120  01D0  30FF               	movlw	255
  1121  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1122  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1123  01D3  0086               	movwf	6	;volatile
  1124                           
  1125                           ;LAB_2.c: 142:     ANSELH = 0x00;
  1126  01D4  1683               	bsf	3,5	;RP0=1, select bank3
  1127  01D5  1703               	bsf	3,6	;RP1=1, select bank3
  1128  01D6  0189               	clrf	9	;volatile
  1129                           
  1130                           ;LAB_2.c: 143:     WPUB = 0b11111111;
  1131  01D7  30FF               	movlw	255
  1132  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1133  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1134  01DA  0095               	movwf	21	;volatile
  1135                           
  1136                           ;LAB_2.c: 144:     OPTION_REGbits.nRBPU = 0;
  1137  01DB  1381               	bcf	1,7	;volatile
  1138                           
  1139                           ;LAB_2.c: 145:     IOCB = 0x03;
  1140  01DC  3003               	movlw	3
  1141  01DD  0096               	movwf	22	;volatile
  1142                           
  1143                           ;LAB_2.c: 147:     PORTA = 0x00;
  1144  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1145  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1146  01E0  0185               	clrf	5	;volatile
  1147                           
  1148                           ;LAB_2.c: 148:     TRISA = 0x01;
  1149  01E1  3001               	movlw	1
  1150  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1151  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1152  01E4  0085               	movwf	5	;volatile
  1153                           
  1154                           ;LAB_2.c: 150:     PORTD = 0x00;
  1155  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1156  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1157  01E7  0188               	clrf	8	;volatile
  1158                           
  1159                           ;LAB_2.c: 151:     TRISD = 0x00;
  1160  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1161  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1162  01EA  0188               	clrf	8	;volatile
  1163                           
  1164                           ;LAB_2.c: 157:     (INTCONbits.GIE = 1);
  1165  01EB  178B               	bsf	11,7	;volatile
  1166                           
  1167                           ;LAB_2.c: 158:     INTCONbits.RBIE = 1;
  1168  01EC  158B               	bsf	11,3	;volatile
  1169                           
  1170                           ;LAB_2.c: 159:     INTCONbits.RBIF = 0;
  1171  01ED  100B               	bcf	11,0	;volatile
  1172                           
  1173                           ;LAB_2.c: 160:     INTCONbits.PEIE = 1;
  1174  01EE  170B               	bsf	11,6	;volatile
  1175  01EF  0008               	return
  1176  01F0                     __end_of_config:	
  1177                           
  1178                           	psect	text4
  1179  016D                     __ptext4:	
  1180 ;; *************** function _isr *****************
  1181 ;; Defined at:
  1182 ;;		line 86 in file "LAB_2.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          5       0       0       0       0
  1199 ;;      Totals:         5       0       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    1
  1203 ;; This function calls:
  1204 ;;		_hexa_display
  1205 ;; This function is called by:
  1206 ;;		Interrupt level 1
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _isr
  1212  016D                     _isr:	
  1213                           
  1214                           ;LAB_2.c: 87:     if(PIR1bits.ADIF == 1){
  1215  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1216  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1217  016F  1F0C               	btfss	12,6	;volatile
  1218  0170  2976               	goto	i1l1254
  1219                           
  1220                           ;LAB_2.c: 88:         valor_adc = ADRESH;
  1221  0171  081E               	movf	30,w	;volatile
  1222  0172  00F6               	movwf	??_isr
  1223  0173  0876               	movf	??_isr,w
  1224  0174  00FB               	movwf	_valor_adc
  1225                           
  1226                           ;LAB_2.c: 89:         PIR1bits.ADIF = 0;
  1227  0175  130C               	bcf	12,6	;volatile
  1228  0176                     i1l1254:	
  1229                           
  1230                           ;LAB_2.c: 92:     if (INTCONbits.RBIF == 1){
  1231  0176  1C0B               	btfss	11,0	;volatile
  1232  0177  2993               	goto	i1l1278
  1233                           
  1234                           ;LAB_2.c: 95:         if (PORTBbits.RB0==0 && a==0){
  1235  0178  1806               	btfsc	6,0	;volatile
  1236  0179  2984               	goto	i1l1266
  1237  017A  0824               	movf	_a,w
  1238  017B  1D03               	btfss	3,2
  1239  017C  2984               	goto	i1l1266
  1240                           
  1241                           ;LAB_2.c: 96:             a = 1;
  1242  017D  01A4               	clrf	_a
  1243  017E  0AA4               	incf	_a,f
  1244                           
  1245                           ;LAB_2.c: 97:             if(contador >0x00){
  1246  017F  087C               	movf	_contador,w
  1247  0180  1903               	btfsc	3,2
  1248  0181  2984               	goto	i1l1266
  1249                           
  1250                           ;LAB_2.c: 98:                 contador--;
  1251  0182  3001               	movlw	1
  1252  0183  02FC               	subwf	_contador,f
  1253  0184                     i1l1266:	
  1254                           
  1255                           ;LAB_2.c: 101:         if (PORTBbits.RB1==0 && b ==0){
  1256  0184  1886               	btfsc	6,1	;volatile
  1257  0185  2992               	goto	i1l1276
  1258  0186  0823               	movf	_b,w
  1259  0187  1D03               	btfss	3,2
  1260  0188  2992               	goto	i1l1276
  1261                           
  1262                           ;LAB_2.c: 102:             b = 1;
  1263  0189  01A3               	clrf	_b
  1264  018A  0AA3               	incf	_b,f
  1265                           
  1266                           ;LAB_2.c: 103:             if(contador < 0xFF){
  1267  018B  0A7C               	incf	_contador,w
  1268  018C  1903               	btfsc	3,2
  1269  018D  2992               	goto	i1l1276
  1270                           
  1271                           ;LAB_2.c: 104:                 contador++;
  1272  018E  3001               	movlw	1
  1273  018F  00F6               	movwf	??_isr
  1274  0190  0876               	movf	??_isr,w
  1275  0191  07FC               	addwf	_contador,f
  1276  0192                     i1l1276:	
  1277                           
  1278                           ;LAB_2.c: 108:         INTCONbits.RBIF = 0;
  1279  0192  100B               	bcf	11,0	;volatile
  1280  0193                     i1l1278:	
  1281                           
  1282                           ;LAB_2.c: 111:     if(INTCONbits.T0IF == 1){
  1283  0193  1D0B               	btfss	11,2	;volatile
  1284  0194  29B6               	goto	i1l91
  1285                           
  1286                           ;LAB_2.c: 112:         hexa_display(valor_adc, transis );
  1287  0195  087D               	movf	_transis,w
  1288  0196  00F6               	movwf	??_isr
  1289  0197  0876               	movf	??_isr,w
  1290  0198  00F0               	movwf	hexa_display@transis
  1291  0199  087B               	movf	_valor_adc,w
  1292  019A  120A  118A  201D  120A  118A  	fcall	_hexa_display
  1293                           
  1294                           ;LAB_2.c: 113:         switch(transis){
  1295  019F  29A5               	goto	i1l1286
  1296  01A0                     i1l88:	
  1297                           ;LAB_2.c: 114:             case 0:
  1298                           
  1299                           
  1300                           ;LAB_2.c: 115:                 transis = 0x01;
  1301  01A0  01FD               	clrf	_transis
  1302  01A1  0AFD               	incf	_transis,f
  1303                           
  1304                           ;LAB_2.c: 116:                 break;
  1305  01A2  29B5               	goto	i1l89
  1306  01A3                     i1l1282:	
  1307                           
  1308                           ;LAB_2.c: 118:                 transis = 0x00;
  1309  01A3  01FD               	clrf	_transis
  1310                           
  1311                           ;LAB_2.c: 119:                 break;
  1312  01A4  29B5               	goto	i1l89
  1313  01A5                     i1l1286:	
  1314  01A5  087D               	movf	_transis,w
  1315  01A6  00F6               	movwf	??_isr
  1316  01A7  01F7               	clrf	??_isr+1
  1317                           
  1318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 1, Range of values is 0 to 0
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            4     3 (average)
  1324                           ; direct_byte           11     8 (fixed)
  1325                           ; jumptable            260     6 (fixed)
  1326                           ;	Chosen strategy is simple_byte
  1327  01A8  0877               	movf	??_isr+1,w
  1328  01A9  3A00               	xorlw	0	; case 0
  1329  01AA  1903               	skipnz
  1330  01AB  29AD               	goto	i1l1394
  1331  01AC  29B5               	goto	i1l89
  1332  01AD                     i1l1394:	
  1333                           
  1334                           ; Switch size 1, requested type "simple"
  1335                           ; Number of cases is 2, Range of values is 0 to 1
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; simple_byte            7     4 (average)
  1339                           ; direct_byte           14     8 (fixed)
  1340                           ; jumptable            260     6 (fixed)
  1341                           ;	Chosen strategy is simple_byte
  1342  01AD  0876               	movf	??_isr,w
  1343  01AE  3A00               	xorlw	0	; case 0
  1344  01AF  1903               	skipnz
  1345  01B0  29A0               	goto	i1l88
  1346  01B1  3A01               	xorlw	1	; case 1
  1347  01B2  1903               	skipnz
  1348  01B3  29A3               	goto	i1l1282
  1349  01B4  29B5               	goto	i1l89
  1350  01B5                     i1l89:	
  1351                           
  1352                           ;LAB_2.c: 121:     INTCONbits.T0IF = 0;
  1353  01B5  110B               	bcf	11,2	;volatile
  1354  01B6                     i1l91:	
  1355  01B6  087A               	movf	??_isr+4,w
  1356  01B7  008A               	movwf	10
  1357  01B8  0879               	movf	??_isr+3,w
  1358  01B9  0084               	movwf	4
  1359  01BA  0E78               	swapf	(??_isr+2)^(0+4294967168),w
  1360  01BB  0083               	movwf	3
  1361  01BC  0EFE               	swapf	126,f
  1362  01BD  0E7E               	swapf	126,w
  1363  01BE  0009               	retfie
  1364  01BF                     __end_of_isr:	
  1365                           
  1366                           	psect	intentry
  1367  0004                     __pintentry:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1370                           
  1371  0004                     interrupt_function:	
  1372  007E                     saved_w	set	btemp
  1373  0004  00FE               	movwf	btemp
  1374  0005  0E03               	swapf	3,w
  1375  0006  00F8               	movwf	??_isr+2
  1376  0007  0804               	movf	4,w
  1377  0008  00F9               	movwf	??_isr+3
  1378  0009  080A               	movf	10,w
  1379  000A  00FA               	movwf	??_isr+4
  1380  000B  120A  118A  296D   	ljmp	_isr
  1381                           
  1382                           	psect	text5
  1383  001D                     __ptext5:	
  1384 ;; *************** function _hexa_display *****************
  1385 ;; Defined at:
  1386 ;;		line 147 in file "funciones.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  adc_valor       1    wreg     unsigned char 
  1389 ;;  transis         1    0[COMMON] unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  adc_valor       1    5[COMMON] unsigned char 
  1392 ;;  valor2          1    4[COMMON] unsigned char 
  1393 ;;  valor1          1    3[COMMON] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         1       0       0       0       0
  1404 ;;      Locals:         3       0       0       0       0
  1405 ;;      Temps:          2       0       0       0       0
  1406 ;;      Totals:         6       0       0       0       0
  1407 ;;Total ram usage:        6 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_isr
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _hexa_display
  1418  001D                     _hexa_display:	
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _hexa_display: [wreg-fsr0h+status,2+status,0]
  1422                           ;hexa_display@adc_valor stored from wreg
  1423  001D  00F5               	movwf	hexa_display@adc_valor
  1424                           
  1425                           ;funciones.c: 148:     uint8_t valor1;;funciones.c: 149:     uint8_t valor2;;funciones.c
      +                          : 151:     valor1 = adc_valor & 0x0F;
  1426  001E  0875               	movf	hexa_display@adc_valor,w
  1427  001F  390F               	andlw	15
  1428  0020  00F1               	movwf	??_hexa_display
  1429  0021  0871               	movf	??_hexa_display,w
  1430  0022  00F3               	movwf	hexa_display@valor1
  1431                           
  1432                           ;funciones.c: 152:     valor2 = (adc_valor & 0xF0)>>4 ;
  1433  0023  0875               	movf	hexa_display@adc_valor,w
  1434  0024  00F1               	movwf	??_hexa_display
  1435  0025  3004               	movlw	4
  1436  0026                     u16_25:	
  1437  0026  1003               	clrc
  1438  0027  0CF1               	rrf	??_hexa_display,f
  1439  0028  3EFF               	addlw	-1
  1440  0029  1D03               	skipz
  1441  002A  2826               	goto	u16_25
  1442  002B  0871               	movf	??_hexa_display,w
  1443  002C  390F               	andlw	15
  1444  002D  00F2               	movwf	??_hexa_display+1
  1445  002E  0872               	movf	??_hexa_display+1,w
  1446  002F  00F4               	movwf	hexa_display@valor2
  1447                           
  1448                           ;funciones.c: 155:     switch(transis){
  1449  0030  28DE               	goto	i1l1204
  1450  0031                     i1l141:	
  1451                           ;funciones.c: 156:         case 0:
  1452                           
  1453                           
  1454                           ;funciones.c: 157:             PORTEbits.RE0 = 0;
  1455  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0033  1009               	bcf	9,0	;volatile
  1458                           
  1459                           ;funciones.c: 158:             PORTEbits.RE1 = 1;
  1460  0034  1489               	bsf	9,1	;volatile
  1461                           
  1462                           ;funciones.c: 159:             switch(valor2){
  1463  0035  2866               	goto	i1l1164
  1464  0036                     i1l1130:	
  1465                           
  1466                           ;funciones.c: 161:                     PORTC = 0x3F;
  1467  0036  303F               	movlw	63
  1468  0037  0087               	movwf	7	;volatile
  1469                           
  1470                           ;funciones.c: 162:                     break;
  1471  0038  0008               	return
  1472  0039                     i1l1132:	
  1473                           
  1474                           ;funciones.c: 164:                     PORTC = 0x06;
  1475  0039  3006               	movlw	6
  1476  003A  0087               	movwf	7	;volatile
  1477                           
  1478                           ;funciones.c: 165:                     break;
  1479  003B  0008               	return
  1480  003C                     i1l1134:	
  1481                           
  1482                           ;funciones.c: 167:                     PORTC = 0x5B;
  1483  003C  305B               	movlw	91
  1484  003D  0087               	movwf	7	;volatile
  1485                           
  1486                           ;funciones.c: 168:                     break;
  1487  003E  0008               	return
  1488  003F                     i1l1136:	
  1489                           
  1490                           ;funciones.c: 170:                     PORTC = 0x4F;
  1491  003F  304F               	movlw	79
  1492  0040  0087               	movwf	7	;volatile
  1493                           
  1494                           ;funciones.c: 171:                     break;
  1495  0041  0008               	return
  1496  0042                     i1l1138:	
  1497                           
  1498                           ;funciones.c: 173:                     PORTC = 0x66;
  1499  0042  3066               	movlw	102
  1500  0043  0087               	movwf	7	;volatile
  1501                           
  1502                           ;funciones.c: 174:                     break;
  1503  0044  0008               	return
  1504  0045                     i1l1140:	
  1505                           
  1506                           ;funciones.c: 176:                     PORTC = 0x6D;
  1507  0045  306D               	movlw	109
  1508  0046  0087               	movwf	7	;volatile
  1509                           
  1510                           ;funciones.c: 177:                     break;
  1511  0047  0008               	return
  1512  0048                     i1l1142:	
  1513                           
  1514                           ;funciones.c: 179:                     PORTC = 0x7D;
  1515  0048  307D               	movlw	125
  1516  0049  0087               	movwf	7	;volatile
  1517                           
  1518                           ;funciones.c: 180:                     break;
  1519  004A  0008               	return
  1520  004B                     i1l1144:	
  1521                           
  1522                           ;funciones.c: 182:                     PORTC = 0x07;
  1523  004B  3007               	movlw	7
  1524  004C  0087               	movwf	7	;volatile
  1525                           
  1526                           ;funciones.c: 183:                     break;
  1527  004D  0008               	return
  1528  004E                     i1l1146:	
  1529                           
  1530                           ;funciones.c: 185:                     PORTC = 0x7F;
  1531  004E  307F               	movlw	127
  1532  004F  0087               	movwf	7	;volatile
  1533                           
  1534                           ;funciones.c: 186:                     break;
  1535  0050  0008               	return
  1536  0051                     i1l1148:	
  1537                           
  1538                           ;funciones.c: 188:                     PORTC = 0x67;
  1539  0051  3067               	movlw	103
  1540  0052  0087               	movwf	7	;volatile
  1541                           
  1542                           ;funciones.c: 189:                     break;
  1543  0053  0008               	return
  1544  0054                     i1l1150:	
  1545                           
  1546                           ;funciones.c: 191:                     PORTC = 0x77;
  1547  0054  3077               	movlw	119
  1548  0055  0087               	movwf	7	;volatile
  1549                           
  1550                           ;funciones.c: 192:                     break;
  1551  0056  0008               	return
  1552  0057                     i1l1152:	
  1553                           
  1554                           ;funciones.c: 194:                     PORTC = 0x7C;
  1555  0057  307C               	movlw	124
  1556  0058  0087               	movwf	7	;volatile
  1557                           
  1558                           ;funciones.c: 195:                     break;
  1559  0059  0008               	return
  1560  005A                     i1l1154:	
  1561                           
  1562                           ;funciones.c: 197:                     PORTC = 0x39;
  1563  005A  3039               	movlw	57
  1564  005B  0087               	movwf	7	;volatile
  1565                           
  1566                           ;funciones.c: 198:                     break;
  1567  005C  0008               	return
  1568  005D                     i1l1156:	
  1569                           
  1570                           ;funciones.c: 200:                     PORTC = 0x5E;
  1571  005D  305E               	movlw	94
  1572  005E  0087               	movwf	7	;volatile
  1573                           
  1574                           ;funciones.c: 201:                     break;
  1575  005F  0008               	return
  1576  0060                     i1l1158:	
  1577                           
  1578                           ;funciones.c: 203:                     PORTC = 0x79;
  1579  0060  3079               	movlw	121
  1580  0061  0087               	movwf	7	;volatile
  1581                           
  1582                           ;funciones.c: 204:                     break;
  1583  0062  0008               	return
  1584  0063                     i1l1160:	
  1585                           
  1586                           ;funciones.c: 206:                     PORTC = 0x71;
  1587  0063  3071               	movlw	113
  1588  0064  0087               	movwf	7	;volatile
  1589                           
  1590                           ;funciones.c: 207:                     break;
  1591  0065  0008               	return
  1592  0066                     i1l1164:	
  1593  0066  0874               	movf	hexa_display@valor2,w
  1594  0067  00F1               	movwf	??_hexa_display
  1595  0068  01F2               	clrf	??_hexa_display+1
  1596                           
  1597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 1, Range of values is 0 to 0
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            4     3 (average)
  1603                           ; direct_byte           11     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606  0069  0872               	movf	??_hexa_display+1,w
  1607  006A  3A00               	xorlw	0	; case 0
  1608  006B  1903               	skipnz
  1609  006C  286E               	goto	i1l1396
  1610  006D  28EE               	goto	i1l180
  1611  006E                     i1l1396:	
  1612                           
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 16, Range of values is 0 to 15
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           49    25 (average)
  1618                           ; direct_byte           56     8 (fixed)
  1619                           ; jumptable            260     6 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621  006E  0871               	movf	??_hexa_display,w
  1622  006F  3A00               	xorlw	0	; case 0
  1623  0070  1903               	skipnz
  1624  0071  2836               	goto	i1l1130
  1625  0072  3A01               	xorlw	1	; case 1
  1626  0073  1903               	skipnz
  1627  0074  2839               	goto	i1l1132
  1628  0075  3A03               	xorlw	3	; case 2
  1629  0076  1903               	skipnz
  1630  0077  283C               	goto	i1l1134
  1631  0078  3A01               	xorlw	1	; case 3
  1632  0079  1903               	skipnz
  1633  007A  283F               	goto	i1l1136
  1634  007B  3A07               	xorlw	7	; case 4
  1635  007C  1903               	skipnz
  1636  007D  2842               	goto	i1l1138
  1637  007E  3A01               	xorlw	1	; case 5
  1638  007F  1903               	skipnz
  1639  0080  2845               	goto	i1l1140
  1640  0081  3A03               	xorlw	3	; case 6
  1641  0082  1903               	skipnz
  1642  0083  2848               	goto	i1l1142
  1643  0084  3A01               	xorlw	1	; case 7
  1644  0085  1903               	skipnz
  1645  0086  284B               	goto	i1l1144
  1646  0087  3A0F               	xorlw	15	; case 8
  1647  0088  1903               	skipnz
  1648  0089  284E               	goto	i1l1146
  1649  008A  3A01               	xorlw	1	; case 9
  1650  008B  1903               	skipnz
  1651  008C  2851               	goto	i1l1148
  1652  008D  3A03               	xorlw	3	; case 10
  1653  008E  1903               	skipnz
  1654  008F  2854               	goto	i1l1150
  1655  0090  3A01               	xorlw	1	; case 11
  1656  0091  1903               	skipnz
  1657  0092  2857               	goto	i1l1152
  1658  0093  3A07               	xorlw	7	; case 12
  1659  0094  1903               	skipnz
  1660  0095  285A               	goto	i1l1154
  1661  0096  3A01               	xorlw	1	; case 13
  1662  0097  1903               	skipnz
  1663  0098  285D               	goto	i1l1156
  1664  0099  3A03               	xorlw	3	; case 14
  1665  009A  1903               	skipnz
  1666  009B  2860               	goto	i1l1158
  1667  009C  3A01               	xorlw	1	; case 15
  1668  009D  1903               	skipnz
  1669  009E  2863               	goto	i1l1160
  1670  009F  28EE               	goto	i1l180
  1671  00A0                     i1l161:	
  1672                           ;funciones.c: 211:         case 1:
  1673                           
  1674                           
  1675                           ;funciones.c: 212:             PORTEbits.RE0 = 1;
  1676  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1677  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1678  00A2  1409               	bsf	9,0	;volatile
  1679                           
  1680                           ;funciones.c: 213:             PORTEbits.RE1 = 0;
  1681  00A3  1089               	bcf	9,1	;volatile
  1682                           
  1683                           ;funciones.c: 214:             switch(valor1){
  1684  00A4  0873               	movf	hexa_display@valor1,w
  1685  00A5  00F1               	movwf	??_hexa_display
  1686  00A6  01F2               	clrf	??_hexa_display+1
  1687                           
  1688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 1, Range of values is 0 to 0
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            4     3 (average)
  1694                           ; direct_byte           11     8 (fixed)
  1695                           ; jumptable            260     6 (fixed)
  1696                           ;	Chosen strategy is simple_byte
  1697  00A7  0872               	movf	??_hexa_display+1,w
  1698  00A8  3A00               	xorlw	0	; case 0
  1699  00A9  1903               	skipnz
  1700  00AA  28AC               	goto	i1l1398
  1701  00AB  28EE               	goto	i1l180
  1702  00AC                     i1l1398:	
  1703                           
  1704                           ; Switch size 1, requested type "simple"
  1705                           ; Number of cases is 16, Range of values is 0 to 15
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte           49    25 (average)
  1709                           ; direct_byte           56     8 (fixed)
  1710                           ; jumptable            260     6 (fixed)
  1711                           ;	Chosen strategy is simple_byte
  1712  00AC  0871               	movf	??_hexa_display,w
  1713  00AD  3A00               	xorlw	0	; case 0
  1714  00AE  1903               	skipnz
  1715  00AF  2836               	goto	i1l1130
  1716  00B0  3A01               	xorlw	1	; case 1
  1717  00B1  1903               	skipnz
  1718  00B2  2839               	goto	i1l1132
  1719  00B3  3A03               	xorlw	3	; case 2
  1720  00B4  1903               	skipnz
  1721  00B5  283C               	goto	i1l1134
  1722  00B6  3A01               	xorlw	1	; case 3
  1723  00B7  1903               	skipnz
  1724  00B8  283F               	goto	i1l1136
  1725  00B9  3A07               	xorlw	7	; case 4
  1726  00BA  1903               	skipnz
  1727  00BB  2842               	goto	i1l1138
  1728  00BC  3A01               	xorlw	1	; case 5
  1729  00BD  1903               	skipnz
  1730  00BE  2845               	goto	i1l1140
  1731  00BF  3A03               	xorlw	3	; case 6
  1732  00C0  1903               	skipnz
  1733  00C1  2848               	goto	i1l1142
  1734  00C2  3A01               	xorlw	1	; case 7
  1735  00C3  1903               	skipnz
  1736  00C4  284B               	goto	i1l1144
  1737  00C5  3A0F               	xorlw	15	; case 8
  1738  00C6  1903               	skipnz
  1739  00C7  284E               	goto	i1l1146
  1740  00C8  3A01               	xorlw	1	; case 9
  1741  00C9  1903               	skipnz
  1742  00CA  2851               	goto	i1l1148
  1743  00CB  3A03               	xorlw	3	; case 10
  1744  00CC  1903               	skipnz
  1745  00CD  2854               	goto	i1l1150
  1746  00CE  3A01               	xorlw	1	; case 11
  1747  00CF  1903               	skipnz
  1748  00D0  2857               	goto	i1l1152
  1749  00D1  3A07               	xorlw	7	; case 12
  1750  00D2  1903               	skipnz
  1751  00D3  285A               	goto	i1l1154
  1752  00D4  3A01               	xorlw	1	; case 13
  1753  00D5  1903               	skipnz
  1754  00D6  285D               	goto	i1l1156
  1755  00D7  3A03               	xorlw	3	; case 14
  1756  00D8  1903               	skipnz
  1757  00D9  2860               	goto	i1l1158
  1758  00DA  3A01               	xorlw	1	; case 15
  1759  00DB  1903               	skipnz
  1760  00DC  2863               	goto	i1l1160
  1761  00DD  28EE               	goto	i1l180
  1762  00DE                     i1l1204:	
  1763  00DE  0870               	movf	hexa_display@transis,w
  1764  00DF  00F1               	movwf	??_hexa_display
  1765  00E0  01F2               	clrf	??_hexa_display+1
  1766                           
  1767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1768                           ; Switch size 1, requested type "simple"
  1769                           ; Number of cases is 1, Range of values is 0 to 0
  1770                           ; switch strategies available:
  1771                           ; Name         Instructions Cycles
  1772                           ; simple_byte            4     3 (average)
  1773                           ; direct_byte           11     8 (fixed)
  1774                           ; jumptable            260     6 (fixed)
  1775                           ;	Chosen strategy is simple_byte
  1776  00E1  0872               	movf	??_hexa_display+1,w
  1777  00E2  3A00               	xorlw	0	; case 0
  1778  00E3  1903               	skipnz
  1779  00E4  28E6               	goto	i1l1400
  1780  00E5  28EE               	goto	i1l180
  1781  00E6                     i1l1400:	
  1782                           
  1783                           ; Switch size 1, requested type "simple"
  1784                           ; Number of cases is 2, Range of values is 0 to 1
  1785                           ; switch strategies available:
  1786                           ; Name         Instructions Cycles
  1787                           ; simple_byte            7     4 (average)
  1788                           ; direct_byte           14     8 (fixed)
  1789                           ; jumptable            260     6 (fixed)
  1790                           ;	Chosen strategy is simple_byte
  1791  00E6  0871               	movf	??_hexa_display,w
  1792  00E7  3A00               	xorlw	0	; case 0
  1793  00E8  1903               	skipnz
  1794  00E9  2831               	goto	i1l141
  1795  00EA  3A01               	xorlw	1	; case 1
  1796  00EB  1903               	skipnz
  1797  00EC  28A0               	goto	i1l161
  1798  00ED  28EE               	goto	i1l180
  1799  00EE                     i1l180:	
  1800  00EE  0008               	return
  1801  00EF                     __end_of_hexa_display:	
  1802  007E                     btemp	set	126	;btemp
  1803  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_hexa_display

Critical Paths under _main in BANK0

    _main->_init_ADC

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      44
                             _config
                           _init_ADC
                          _init_TMR0
 ---------------------------------------------------------------------------------
 (1) _init_TMR0                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0     188
                                              6 COMMON     5     5      0
                       _hexa_display
 ---------------------------------------------------------------------------------
 (3) _hexa_display                                         6     5      1     188
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _init_ADC
   _init_TMR0

 _isr (ROOT)
   _hexa_display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       5       5        6.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      12        0.0%
ABS                  0      0      13       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Feb 02 22:27:18 2020

      hexa_display@valor2 0074                         _a 0024                         _b 0023  
     hexa_display@transis 0070               __CFG_CP$OFF 0000                        l68 020D  
                     l120 00FA                       l121 00FC                       l130 0112  
                     l122 00FE                       l131 0116                       l123 0100  
                     l132 011A                       l124 0102                       l116 00F5  
                     l133 011F                       l125 0104                       l117 015E  
                     l126 0106                       l118 00F6                       l127 0109  
                     l119 00F8                       l128 010C                       l129 010F  
            __CFG_CPD$OFF 0000                       _isr 016D                       fsr0 0004  
            __CFG_LVP$OFF 0000             ?_hexa_display 0070                      l1116 0124  
                    l1228 0206                      l1392 012C                      ?_isr 0070  
                    _IOCB 0096                      i1l91 01B6                      i1l88 01A0  
                    i1l89 01B5                      _TMR0 0001                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _main 01F0                      btemp 007E  
                    start 000E             __CFG_IESO$OFF 0000                     ??_isr 0076  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l141 0031                     i1l161 00A0                     i1l180 00EE  
                   u16_25 0026                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089            __CFG_FCMEN$OFF 0000  
          ??_hexa_display 0071            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 0011              __end_of_main 0219                    ??_main 0023  
                  _ADRESH 001E                    _ANSELH 0189                    i1l1130 0036  
                  i1l1140 0045                    i1l1132 0039                    i1l1204 00DE  
                  i1l1150 0054                    i1l1142 0048                    i1l1134 003C  
                  i1l1400 00E6                    i1l1160 0063                    i1l1152 0057  
                  i1l1144 004B                    i1l1136 003F                    i1l1154 005A  
                  i1l1146 004E                    i1l1138 0042                    i1l1156 005D  
                  i1l1148 0051                    i1l1164 0066                    i1l1158 0060  
                  i1l1254 0176                    i1l1282 01A3                    i1l1266 0184  
                  i1l1276 0192                    i1l1286 01A5                    i1l1278 0193  
                  i1l1394 01AD                    i1l1396 006E                    i1l1398 00AC  
          __CFG_PWRTE$OFF 0000          __end_of_init_ADC 016D                    _config 01BF  
            __pdataCOMMON 007D                    saved_w 007E   __end_of__initialization 0019  
         init_ADC@channel 0022            __pcstackCOMMON 0070      __end_of_hexa_display 00EF  
          _OPTION_REGbits 0081                __pbssBANK0 0023        __size_of_init_TMR0 0010  
      init_TMR0@valor_tmr 0020                __pmaintext 01F0                __pintentry 0004  
                 ?_config 0070                 ?_init_ADC 0070           __size_of_config 0031  
                 __ptext1 0219                   __ptext2 00EF                   __ptext3 01BF  
                 __ptext4 016D                   __ptext5 001D         __end_of_init_TMR0 0229  
            __size_of_isr 0052                   _transis 007D      end_of_initialization 0019  
              ??_init_ADC 0020     __size_of_hexa_display 00D2                 _PORTBbits 0006  
               _PORTEbits 0009              _hexa_display 001D             __pidataCOMMON 0229  
          __end_of_config 01F0       start_initialization 0011               __end_of_isr 01BF  
__CFG_FOSC$INTRC_NOCLKOUT 0000                  ??_config 0020               __pbssCOMMON 007B  
               ___latbits 0002             __pcstackBANK0 0020         __size_of_init_ADC 007E  
               _init_TMR0 0219         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                 _valor_adc 007B                _ADCON0bits 001F  
              _ADCON1bits 009F                ?_init_TMR0 0070         __CFG_BOR4V$BOR40V 0000  
                _contador 007C                  _init_ADC 00EF             __size_of_main 0029  
              _INTCONbits 000B               ??_init_TMR0 0020                  intlevel1 0000  
   hexa_display@adc_valor 0075        hexa_display@valor1 0073  
